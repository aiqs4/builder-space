name: Bootstrap State Storage

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action'
        required: true
        default: 'up'
        type: choice
        options:
        - up

permissions:
  id-token: write
  contents: read

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
    - uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    - uses: pulumi/actions@v6
      with:
        pulumi-version: latest
    - run: cd bootstrap && pip install -r requirements.txt

    - name: Bootstrap KMS key
      run: |
        if ! aws kms describe-key --key-id alias/pulumi-secrets >/dev/null 2>&1; then
          KEY_ID=$(aws kms create-key --description "Pulumi state encryption key" --key-usage ENCRYPT_DECRYPT --query 'KeyMetadata.KeyId' --output text)
          aws kms create-alias --alias-name alias/pulumi-secrets --target-key-id $KEY_ID
        fi

    - name: Deploy bootstrap
      run: |
        cd bootstrap
        export PULUMI_SECRETS_PROVIDER="awskms://alias/pulumi-secrets"
        
        # Run locally first
        echo "Creating bootstrap locally..."
        pulumi stack select bootstrap-dev --create
        pulumi up --yes
        
        # Export local state and upload to shared
        echo "Uploading local state to shared backend..."
        pulumi stack export --file bootstrap-state.json
        pulumi login ${{ secrets.PULUMI_BACKEND_URL }}
        pulumi stack select bootstrap-dev --create
        pulumi stack import --file bootstrap-state.json