name: Bootstrap State Storage (Pulumi)

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'State storage action to perform'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - up
        - destroy
        - refresh

permissions:
  id-token: write
  contents: read

jobs:
  state-bootstrap:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Setup Pulumi
      uses: pulumi/actions@v6
      with:
        pulumi-version: latest

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-bootstrap-${{ hashFiles('bootstrap/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-bootstrap-

    - name: Install Python dependencies (Bootstrap)
      run: |
        cd bootstrap
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Validate AWS credentials and permissions
      run: |
        echo "🔐 Validating AWS credentials..."
        aws sts get-caller-identity
        aws s3 ls || echo "S3 access check failed - will retry"
        aws dynamodb list-tables || echo "DynamoDB access check failed - will retry"
        echo "✅ AWS credentials validated"

    - name: Configure Pulumi (Bootstrap)
      run: |
        cd bootstrap
        echo "🎯 Configuring Pulumi backend..."
        BACKEND_URL="${{ secrets.PULUMI_BACKEND_URL }}"
        pulumi login ${BACKEND_URL:-"--local"}
        
        # Simple stack selection
        pulumi stack select dev --create
        echo "✅ Pulumi backend configured"

    - name: Pulumi Up (Bootstrap)
      run: |
        cd bootstrap
        echo "� Deploying state storage infrastructure..."
        
        # Single command - Pulumi handles import/deploy automatically
        pulumi up --yes
        
        echo "## 🚀 State Storage Bootstrap Completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Resources Created:" >> $GITHUB_STEP_SUMMARY
        echo "- S3 Bucket: $(pulumi stack output bucket_name)" >> $GITHUB_STEP_SUMMARY
        echo "- DynamoDB Table: $(pulumi stack output dynamodb_table_name)" >> $GITHUB_STEP_SUMMARY
        echo "- KMS Key: $(pulumi stack output kms_key_arn)" >> $GITHUB_STEP_SUMMARY
      if: github.event.inputs.action == 'up'

    - name: Pulumi Preview (Bootstrap)
      run: |
        cd bootstrap
        echo "👀 Previewing infrastructure changes..."
        pulumi preview --diff
      if: github.event.inputs.action == 'preview'

    - name: Pulumi Refresh (Bootstrap)
      run: |
        cd bootstrap
        echo "🔄 Refreshing Pulumi state..."
        pulumi refresh --yes
      if: github.event.inputs.action == 'refresh'

    - name: Pulumi Destroy (Bootstrap)
      run: |
        cd bootstrap
        echo "🗑️ Destroying state storage infrastructure..."
        pulumi destroy --yes
        echo "⚠️ State storage infrastructure destroyed" >> $GITHUB_STEP_SUMMARY
      if: github.event.inputs.action == 'destroy'

    - name: Pulumi Destroy (Bootstrap)
      run: |
        cd bootstrap
        echo "🗑️ Destroying state storage infrastructure..."
        pulumi destroy --yes
        echo "⚠️ State storage infrastructure destroyed. State files will be lost!" >> $GITHUB_STEP_SUMMARY
      if: github.event.inputs.action == 'destroy'
