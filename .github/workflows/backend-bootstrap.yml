name: Bootstrap State Storage (Pulumi)

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'State storage action to perform'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - up
        - destroy

permissions:
  id-token: write
  contents: read

jobs:
  state-bootstrap:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Setup Pulumi
      uses: pulumi/actions@v6
      with:
        pulumi-version: latest

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-bootstrap-${{ hashFiles('bootstrap/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-bootstrap-

    - name: Install Python dependencies (Bootstrap)
      run: |
        cd bootstrap
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure Pulumi (Bootstrap)
      run: |
        cd bootstrap
        pulumi login --local
        echo "${{ secrets.PULUMI_CONFIG_PASSPHRASE }}" | pulumi stack select dev --create
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

    - name: Pulumi Preview (Bootstrap)
      run: |
        cd bootstrap
        pulumi preview
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      if: ${{ contains(fromJson('["preview","up"]'), github.event.inputs.action) }}

    - name: Pulumi Up (Bootstrap)
      run: |
        cd bootstrap
        pulumi up --yes
        
        echo "## 🚀 State Storage Bootstrap Completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Backend Configuration:" >> $GITHUB_STEP_SUMMARY
        echo '```json' >> $GITHUB_STEP_SUMMARY
        pulumi stack output backend_config >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Record the bucket and table names above" >> $GITHUB_STEP_SUMMARY
        echo "2. Update GitHub secrets with these values if needed" >> $GITHUB_STEP_SUMMARY
        echo "3. Configure main Pulumi project for S3 backend" >> $GITHUB_STEP_SUMMARY
        echo "4. Run the main infrastructure pipeline" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Backend Configuration Commands:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        pulumi stack output backend_configuration_commands | head -15 >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      if: github.event.inputs.action == 'up'

    - name: Pulumi Destroy (Bootstrap)
      run: |
        cd bootstrap
        pulumi destroy --yes
        echo "⚠️ State storage infrastructure destroyed. State files will be lost!" >> $GITHUB_STEP_SUMMARY
      env:
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
      if: github.event.inputs.action == 'destroy'
