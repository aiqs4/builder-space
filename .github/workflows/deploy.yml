name: Deploy EKS Infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy
  # push:
  #   branches: [ main ]
  #   paths: [ 
  #     '*.tf', 
  #     'modules/**/*.tf',
  #     'deploy.sh',
  #     '.github/workflows/deploy.yml'
  #   ]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.2

    - name: Cache Terraform providers
      uses: actions/cache@v4
      with:
        path: |
          ~/.terraform.d/plugin-cache
          .terraform/providers
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Format Check
      run: terraform fmt -check -diff
      continue-on-error: true

    - name: Terraform Plan
      run: |
        terraform plan -out=tfplan
        terraform show -no-color tfplan > plan.txt
      if: ${{ contains(fromJson('["plan","apply"]'), github.event.inputs.action) || github.event_name == 'push' }}

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: |
          tfplan
          plan.txt
        retention-days: 5
      if: ${{ contains(fromJson('["plan","apply"]'), github.event.inputs.action) || github.event_name == 'push' }}

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      if: github.event.inputs.action == 'apply'

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      if: github.event.inputs.action == 'destroy'

    - name: Update kubeconfig and verify cluster
      run: |
        aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}
        kubectl get nodes
        kubectl get pods -A
        echo "Cluster verification completed successfully"
      if: github.event.inputs.action == 'apply' && success()

    - name: Cost Estimation Comment
      run: |
        if [ -f "plan.txt" ]; then
          echo "## ðŸ’° Estimated Monthly Costs" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Based on current configuration:" >> $GITHUB_STEP_SUMMARY
          echo "- EKS Cluster: $72.00/month" >> $GITHUB_STEP_SUMMARY
          echo "- Node Group (2x t4g.small): $28.80/month" >> $GITHUB_STEP_SUMMARY
          echo "- EBS Storage (40GB): $8.00/month" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Estimated: $108.80/month**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ’¡ **Cost Optimization Tips:**" >> $GITHUB_STEP_SUMMARY
          echo "- Use spot instances: Save ~70% on nodes" >> $GITHUB_STEP_SUMMARY
          echo "- Scale to 1 node for dev: Save ~$14/month" >> $GITHUB_STEP_SUMMARY
          echo "- Use scheduled shutdown: Save ~65% during off-hours" >> $GITHUB_STEP_SUMMARY
        fi
      if: ${{ contains(fromJson('["plan","apply"]'), github.event.inputs.action) }}