# Cert-Manager Helm Application
# This is an example of how to deploy as a separate ArgoCD Application
# For the infrastructure-bootstrap approach, this file is not needed

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
  labels:
    app: cert-manager
    environment: prod
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    # Helm chart from Jetstack repository
    repoURL: https://charts.jetstack.io
    chart: cert-manager
    targetRevision: v1.15.3
    helm:
      valuesObject:
        installCRDs: true
        replicaCount: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        webhook:
          enabled: true
          replicaCount: 1
        cainjector:
          enabled: true
          replicaCount: 1
        prometheus:
          enabled: false
  
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  
  # Health check configuration
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas

---
# ClusterIssuers as a separate application or part of cert-manager
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager-issuers
  namespace: argocd
  labels:
    app: cert-manager-issuers
    environment: prod
spec:
  project: default
  
  source:
    repoURL: https://github.com/aiqs4/builder-space-argocd.git
    targetRevision: HEAD
    path: environments/prod/infrastructure/cert-manager
    # Only sync cluster-issuers.yaml
    directory:
      include: cluster-issuers.yaml
  
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  
  # Sync after cert-manager is deployed
  syncWaves:
    - wave: 1
