# Cluster-Autoscaler Helm Application
# This is an example of how to deploy as a separate ArgoCD Application
# For the infrastructure-bootstrap approach, this file is not needed

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cluster-autoscaler
  namespace: argocd
  labels:
    app: cluster-autoscaler
    environment: prod
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    # Helm chart from official repository
    repoURL: https://kubernetes.github.io/autoscaler
    chart: cluster-autoscaler
    targetRevision: 9.37.0
    helm:
      valuesObject:
        autoDiscovery:
          clusterName: builder-space
          enabled: true
        awsRegion: af-south-1
        rbac:
          create: true
          serviceAccount:
            create: true
            name: cluster-autoscaler
            annotations:
              eks.amazonaws.com/role-arn: arn:aws:iam::YOUR_ACCOUNT_ID:role/cluster-autoscaler-role-XXXXX
        extraArgs:
          scale-down-delay-after-add: 10m
          scale-down-unneeded-time: 10m
          skip-nodes-with-local-storage: false
          skip-nodes-with-system-pods: false
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 300Mi
        cloudProvider: aws
  
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=false  # kube-system already exists
      - PrunePropagationPolicy=foreground
      - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  
  # Health check configuration
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
