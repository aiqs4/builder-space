# Cluster-Autoscaler Helm Values for ArgoCD
# Copy this file to builder-space-argocd/environments/prod/infrastructure/cluster-autoscaler/

# Auto-discovery Configuration
autoDiscovery:
  clusterName: builder-space  # UPDATE: Your EKS cluster name
  enabled: true

# AWS Region
awsRegion: af-south-1  # UPDATE: Your AWS region

# RBAC and Service Account
rbac:
  create: true
  serviceAccount:
    create: true
    name: cluster-autoscaler
    annotations:
      # UPDATE: Get this from Pulumi output:
      # cd builder-space/infra-k8s && pulumi stack output cluster_autoscaler_role_arn
      eks.amazonaws.com/role-arn: arn:aws:iam::YOUR_ACCOUNT_ID:role/cluster-autoscaler-role-XXXXX

# Scaling Configuration
extraArgs:
  # Wait time after scale-up before considering scale-down
  scale-down-delay-after-add: 10m
  
  # Time a node should be unneeded before it is eligible for scale-down
  scale-down-unneeded-time: 10m
  
  # Wait time after node deletion
  scale-down-delay-after-delete: 10s
  
  # Wait time after failed scale-down
  scale-down-delay-after-failure: 3m
  
  # Allow scale-down of nodes with local storage
  skip-nodes-with-local-storage: false
  
  # Allow scale-down of nodes with system pods
  skip-nodes-with-system-pods: false
  
  # Balance similar node groups
  balance-similar-node-groups: false
  
  # Expander strategy (random, most-pods, least-waste, price, priority)
  expander: least-waste

# Resource Configuration
resources:
  limits:
    cpu: 100m
    memory: 300Mi
  requests:
    cpu: 100m
    memory: 300Mi

# Pod Configuration
replicaCount: 1

# Image Configuration
image:
  repository: registry.k8s.io/autoscaling/cluster-autoscaler
  # Tag is automatically set to match Kubernetes version
  pullPolicy: IfNotPresent

# Security Context
securityContext:
  runAsNonRoot: true
  runAsUser: 65534
  fsGroup: 65534

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534

# Affinity and Tolerations
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      preference:
        matchExpressions:
        - key: node-role.kubernetes.io/control-plane
          operator: DoesNotExist

# Tolerations for control plane nodes
tolerations:
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule

# Priority Class
priorityClassName: system-cluster-critical

# Service Monitor (for Prometheus)
serviceMonitor:
  enabled: false
  # Enable if you have Prometheus Operator installed
  # namespace: monitoring
  # interval: 30s

# Logging
logLevel: 4  # 1-5, higher is more verbose

# Feature Gates
cloudProvider: aws
